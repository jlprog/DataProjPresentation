fit <- step(lm(mpg~.,data=mtcars),direction="forward")
summary(fit)
fit <- step(lm(mpg~.,data=mtcars),direction="backward")
summary(lm(mpg~wt+qsec+am,data=mtcars))
fit <- lm(mpg~wt+qsec+am,data=mtcars)
summary(fit)
cor(mtcars$wt,mtcars$qsec,mtcars$am)
x <- c(mtcars$wt,mtcars$qsec,mtcars$am)
cor(x)
x <- mtcars[,c("wt","qsec","am")]
cor(x)
pairs(~ qsec + hp + wt, mtcars, lower.panel=my.panel)
pairs(~ qsec + hp + wt, mtcars)
pairs(mtcars)
cor(mtcars)
str(mtcars)
?mtcars
summary(lm(mpg~am,data=mtcars))
boxplot(mpg~am,data=mtcars,main="Miles Per Gallon", xlab="Transimission", ylab="MPG", col="Blue")
?with
?groupby
?group_by
?aggregate
aggregate(mpg~am,data=mtcars,mean)
mtcars$am   = factor(mtcars$am, labels=c("Automatic","Manual"))
mtcars$cyl  = factor(mtcars$cyl)
mtcars$vs   = factor(mtcars$vs)
mtcars$gear = factor(mtcars$gear)
mtcars$carb = factor(mtcars$carb)
aggregate(mpg~am,data=mtcars,mean)
fit1 <- lm(mpg~am,data=mtcars)
summary(fit1)
?mtcars
summary(lm(mpg~wt*am,data=mtcars))
var(mtcars)
str(mtcars)
mtcars$am   = factor(mtcars$am, labels=c(0,1))
var(mtcars)
cor(mtcars)
data(mtcars)
cor(mtcars)
cor(mtcars[,-c(cyl,am,gear,carb)])
attach(mtcars)
cor(mtcars[,-c(cyl,am,gear,carb)])
mtcars$am   = factor(mtcars$am, labels=c("Automatic","Manual"))
mtcars$cyl  = factor(mtcars$cyl)
mtcars$vs   = factor(mtcars$vs)
mtcars$gear = factor(mtcars$gear)
mtcars$carb = factor(mtcars$carb)
cor(mtcars[,-c(cyl,am,gear,carb)])
cor(mtcars[,-c(cyl,am,gear,carb,vs)])
cor(mtcars[,-c("cyl","am","gear","carb","vs")])
head(mtcars)
cor(mtcars[,c(1,3,4,5,6,7,)])
cor(mtcars[,c(1,3,4,5,6,7)])
summary(lm(mpg~wt+qsec+am,data=mtcars))
summary(lm(mpg~wt+am,data=mtcars))
summary(lm(mpg~wt+hp+am,data=mtcars))
summary(lm(mpg~hp+am,data=mtcars))
fit.2 <- step(lm(mpg ~ ., data = mtcars), direction = "both")
summary(fit.2)
summary(lm(mpg~wt*am,data=mtcars))
summary(lm(mpg~wt*am+qsec*am,data=mtcars))
summary(lm(mpg~wt*am+hp*am,data=mtcars))
summary(lm(mpg~wt*am,data=mtcars))
var(mtcars)
data(mtcars)
var(mtcars)
cor(mtcars)
summary(lm(mpg~cyl+wt,data=mtcars))
summary(lm(mpg~hp,data=mpg))
summary(lm(mpg~hp,data=mtcars))
plot(mpg~gear,data=mtcars)
plot(mpg~gear,data=cyl)
plot(mpg~cyl,data=mtcars)
str(mtcars)
mtcars$am   = factor(mtcars$am, labels=c("Automatic","Manual"))
mtcars$cyl  = factor(mtcars$cyl)
mtcars$vs   = factor(mtcars$vs)
mtcars$gear = factor(mtcars$gear)
mtcars$carb = factor(mtcars$carb)
pairs(mtcars)
mod1 <- lm(mpg~am,data=mtcars)
mod2 <- lm(mpg~.,data=mtcars)
step(mod1,scope=list(lower=mod1,upper=mod2),direction="both",criterion="BIC")
mod1 <- lm(mpg~am,data=mtcars)
mod2 <- lm(mpg~.,data=mtcars)
step(mod1,scope=list(lower=mod1,upper=mod2),direction="both",criterion="BIC")
mod3 <- step(mod1,scope=list(lower=mod1,upper=mod2),direction="both",criterion="BIC")
summary(mod3)
fit <- lm(mpg~wt*am+qsec*am,data=mtcars)
summary(fit)
fit <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit)
pairs(mtcars, panel = panel.smooth, main="Scatterplot of mtcars", col = 1+mtcars$am)
data(mtcars)
mtcars$am   = factor(mtcars$am, labels=c("Automatic","Manual"))
cor(mtcars[,-c(am",)])
)
[]
]
""
cor(mtcars[,-c("am")])
cor(mtcars[,-"am"])
cor(mtcars[,-c("am")])
mtcars[,"am"]
mtcars[,-"am"]
subset(mtcars,select=-"am")
?subset
subset(mtcars,select=-am)
```{r}
cor(subset(mtcars[,-am])
)
cor(subset(mtcars, select=-am))
cor(subset(mtcars, select=-am))
pairs(mtcars, panel = panel.smooth, main="Scatterplot of mtcars", col = 1+mtcars$am)
pairs(mtcars, main="Scatterplot of mtcars", col = 1+mtcars$am)
pairs(mtcars, panel = panel.smooth, main="Scatterplot of mtcars", col = 1+(mtcars$am=="Automatic")
)
fit2 <- lm(mpg~wt+qsec+am,data=mtcars)
summary(fit2)
fit2 <- lm(mpg~wt*am+qsec*am,data=mtcars)
summary(fit2)
fit2 <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit2)
fit2 <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit2)
plot(fit3)
?mfrow
require(graphics)
?mfrow
?influence.measures
influence.measures(fit3)
plot(fit3)
par(mfrow=c(2,2))
plot(fit3)
anova(fit1,fit2)
anova(fit1,fit2,fit3)
?anova
anova(fit1,fit2,fit3)
anova(fit1,fit2)
anova(fit2,fit3)
fit2 <- lm(mpg~wt*am+qsec*am,data=mtcars)
fit1
summary(fit1)
summary(fit2)
summary(fit3)
fit3 <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit3)
anova(fit1,fit2,fit3)
anova(fit1,fit2,fit3)
anova(fit1,fit2)
anova(fit2,fit3)
sumamry(fit2)
summary(fit2)
summary(fit3)
summary(fit3)
names(summary(fit3))
adj.r
summary(fit1)$adj.r
summary(fit2)$adj.r
summary(fit3)$adj.r
summary(lm(mpg~wt+qsec+am,data=mtcars))
fit1 <- lm(mpg~am,data=mtcars)
summary(fit1)$coef
summary(fit1)$adj.r
summary(fit1)$coef[2,1]
fit2 <- lm(mpg~wt*am+qsec*am,data=mtcars)
summary(fit2)$coef
options(scipen=1,digits=2)
fit1
fit2
fit3
anova(fit2,fit3)
plot(wt~am,data=mtcars)
?mtcars
summary(fit3)
predict(fit3)
plot(predict(fit3))
plot(predict(fit3))
plot(predict(fit3)~mtcars$am)
plot(mtcars$am,predict(fit3))
plot(mtcars$am,predict(fit3))
print("Table 1 Correlation Matrix")
"Table 1 Correlation Matrix"
?mtext
x <- cor(subset(mtcars, select=-am))
dim(x)
str(x)
par(mfrow=c(2,2),oma = c(0, 0, 3, 0))
plot(fit3)
mtext("Figure 3",outtext=T)
mtext("Figure 3",otext=T)
mtext("Figure 3",outer=T)
mtext("Figure 3",outer=T,cex=3)
library(car)
residualPlots(fit3)
?plot.lm
plot(fit3,sub.caption="Figure 3")
write.table(x)
print(as.data.table(x))
library(data.table)
print(as.data.table(x))
write.table(x,quote="")
library(xtable)
print(xtable(x))
fm1 <- aov(tlimth ~ sex + ethnicty + grade + disadvg, data = tli)
fm1.table <- xtable(fm1)
print(fm1.table)
data(tli)
fm1 <- aov(tlimth ~ sex + ethnicty + grade + disadvg, data = tli)
fm1.table <- xtable(fm1)
print(fm1.table)
ktable
library(knitr)
ktable
x
print(xtable(x),comment=F)
?xtable
xtable(x,caption="Table 1")
data(tli)
## Demonstrate data.frame
tli.table <- xtable(tli[1:20, ])
digits(tli.table)[c(2, 6)] <- 0
print(tli.table)
print(tli.table, type = "html")
fm2 <- lm(tlimth ~ sex*ethnicty, data = tli)
fm2.table <- xtable(fm2)
print(fm2.table)
kable()
kable(x)
kable(head(iris), format = "latex")
?pandoc
summary(fit3)
fit3 <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit3)$coef
data(mtcars)
mtcars$am   = factor(mtcars$am, labels=c("Automatic","Manual"))
fit3 <- lm(mpg~wt*am+qsec,data=mtcars)
summary(fit3)$coef
est
dim(swiss)
?qn
setwd("~/coursera/testgit")
?publish
library(slidify)
setwd("~/coursera/DataProd/Project/Pitch")
ls -ltr
dir()
slidify("index.Rmd")
publish(user="jlproj",repo="DataProd")
publish(user="jlproj",repo="jlproj/DataProd")
dir()
pwd
dir()
getwd()
setwd("~/coursera/DataProd/test")
dir()
author("mydeck")
dir()
slidify("index.Rmd")
publish(user="jlproj",repo="test",host="github")
setwd("~/coursera/DataProd/Project/Pitch")
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
shiny::runApp('~/coursera/DataProd/Project')
slidify("index.Rmd")
dir()
getwd()
setwd("~/coursera/DataProd/Project")
library(shinyapps)
dir()
pwd
ls -ltr
dir()
runApp()
deployApp()
setwd("~/coursera/DataProd/Project/Pitch")
coef(fit)
--- .class #id
--- .class #id
dir()
browseHtml("index.html")
browsehtml("index.html")
browseHtml("index.html")
library(knitr)
browseHtml("index.html")
browserHtml("index.html")
help.search("browse")
library(knitr)
help.search("browse")
widgets     : mathjax            # {mathjax, quiz, bootstrap, shiny, interactive}
library(googleVis)
install.packages("googleVis")
browseHtml
?knitr
require(devtools)
require(devtools)
install_github("rCharts", "ramnathv")
slidify("index.Rmd")
dir()
browseHTML
browser
?broswer
?browser
browserHtml
browserHTML
browserURL
browseURL
?browseURL
widgets     : mathjax            # {mathjax, quiz, bootstrap, shiny, interactive}
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
slidify("index.rmd")
browseURL("index.Rmd")
slidify("index.Rmd")
browseURL("index.Rmd")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
## Overview
## Overview
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("test.Rmd")
browseURL("test.html")
browseURL("test.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
browseURL("test.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("test.html")
browseURL("test.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
as.character(date())
today
today()
Sys.Date()
format(date(),format="%B %d %Y")
format(Sys.Date(),format="%B %d %Y")
browseURL("index.html")
browseURL("index.html")
format(date(),format="%B %d %Y")
?format
?date
---
title: DeckJS
author: Ramnath Vaidyanathan
framework: deckjs
deckjs: {theme: web-2.0}
highlighter: highlight.js
hitheme    : solarized_light
---
# Getting Started with deck.js
---
## How to Make a Deck
1. <h3>Write Slides</h3>
Slide content is simple HTML.
2. <h3>Choose Themes</h3>
One for slide styles and one for deck transitions.
3. <h3>Include Extensions</h3>
Add extra functionality to your deck, or leave it stripped down.
---
## Slides are just HTML elements with a class of slide.
```html
<section class="slide">
<h2>How to Make a Deck</h2>
<ol>
<li>
<h3>Write Slides</h3>
<p>Slide content is simple HTML.</p>
</li>
<li>
<h3>Choose Themes</h3>
<p>One for slide styles and one for deck transitions.</p>
</li>
…
</ol>
</section>
```
format(Sys.time(), "%a %b %d %X %Y")
Sys.time()
format(Sys.time(), "%a %b %d %Y %X")
format(Sys.time(), "%b %a %d %Y %X")
format(Sys.time(), "%a %b %d %Y %X")
date()
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("test.html")
dir()
dir()
getwd()
browseURL("test.html")
slidify("test.Rmd")
browseURL("index.html")
browseURL("test.html")
getwd()
setwd("../")
dir()
slidify("test.Rmd")
browseURL("test.html")
browseURL("test.html")
setwd("pitch")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
dir()
browseURL("index.html")
browseURL("index.html")
getwd()
setwd("../")
author("interactive")
dir()
getwd()
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
getwd()
setwd("../..")
dir()
setwd("Project")
dir()
setwd("Pitch")
dir()
pwd
author("Pitch")
dir()
getwd()
getwd("../..")
dir()
getwd()
dir()
getwd()
setwd("~/coursera/DataProd/Project")
author("Presentation")
framework   : deckjs      # {io2012, html5slides, shower, dzslides, ...}
